buildscript {
    dependencies {
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
    }
}

plugins {
    id 'org.sonarqube' version '2.7'
    id 'com.jfrog.artifactory' version '4.7.5'
    id 'java'
    id 'application'
}

sonarqube {
    properties {
        property 'sonar.projectName', projectTitle
        property 'sonar.exclusions', 'src/generated/**'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:1.3.9'
    implementation 'org.slf4j:slf4j-api:1.7.26'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'com.tngtech.java:junit-dataprovider:1.10.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'com.h2database:h2:1.4.197'
    testImplementation 'org.postgresql:postgresql:42.2.5'
    testImplementation 'com.microsoft.sqlserver:mssql-jdbc:6.2.2.jre8'

    runtime 'org.slf4j:slf4j-simple:1.7.26',
            'org.postgresql:postgresql:42.2.5',
            'mysql:mysql-connector-java:5.1.47',
            'com.microsoft.sqlserver:mssql-jdbc:6.2.2.jre8'

    runtimeClasspath files('oracle.jar')
}

application {
    mainClassName = 'org.sonarsource.sqdbmigrator.cli.MySQLMigrator'
}

ext {
    buildNumber = System.getProperty("buildNumber")
}
// Replaces the version defined in sources, usually x.y-SNAPSHOT, by a version identifying the build.
if (version.endsWith('-SNAPSHOT') && ext.buildNumber != null) {
    def versionSuffix = (version.toString().count('.') == 1 ? ".0.${ext.buildNumber}" : ".${ext.buildNumber}")
    version = version.replace('-SNAPSHOT', versionSuffix)
}

license {
    header = rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
        js = 'SLASHSTAR_STYLE'
        ts = 'SLASHSTAR_STYLE'
        tsx = 'SLASHSTAR_STYLE'
        css = 'SLASHSTAR_STYLE'
    }
    includes(['**/*.java'])
}

sourceSets.main.java.srcDirs += "src/generated/java"

artifacts { archives distZip }

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact distZip
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = projectTitle
                description = project.description
                url = 'http://www.sonarqube.org/'
                organization {
                    name = 'SonarSource'
                    url = 'http://www.sonarsource.com'
                }
                licenses {
                    license {
                        name = 'GNU LGPL 3'
                        url = 'http://www.gnu.org/licenses/lgpl.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/SonarSource/mysql-migrator'
                }
                developers {
                    developer {
                        id = 'sonarsource-team'
                        name = 'SonarSource Team'
                    }
                }
            }
        }
    }
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.setEnvVarsExcludePatterns('*password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*')
    contextUrl = System.getenv('ARTIFACTORY_URL')
    publish {
        repository {
            repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
            username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
            password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')
        }
        defaults {
            properties = [
                    'build.name'      : 'mysql-migrator',
                    'build.number'    : System.getenv('BUILD_NUMBER'),
                    'pr.branch.target': System.getenv('GITHUB_BASE_BRANCH'),
                    'pr.number'       : System.getenv('PULL_REQUEST'),
                    'vcs.branch'      : System.getenv('GITHUB_BRANCH'),
                    'vcs.revision'    : System.getenv('GIT_SHA1'),
                    'version'         : version
            ]
            publications('mavenJava')
            publishPom = true
            publishIvy = false
        }
    }
    clientConfig.info.setBuildNumber(System.getenv('BUILD_NUMBER'))
    // Define the artifacts to be deployed to https://binaries.sonarsource.com on releases
    clientConfig.info.addEnvironmentProperty('ARTIFACTS_TO_PUBLISH', "${project.group}:mysql-migrator:zip")
    // The name of this variable is important because it's used by the delivery process when extracting version from Artifactory build info.
    clientConfig.info.addEnvironmentProperty('PROJECT_VERSION', "${version}")
}
